
name: Publish release

on:
  release:
    types: [published]

permissions: write-all
env:
  DOTNET_VERSION: '9.0.x'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Publish Windows'
      shell: bash
      run: |
          dotnet publish Gami.Desktop/Gami.Desktop.csproj -r win-x64 -c Release -o release/windows -p:PublishSingleFile=true
          zip -r release/windows.zip release/windows

    - name: Upload Windows binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/windows.zip
        asset_name: windows.zip
        tag: ${{ github.ref }}
        overwrite: true
        body: "Windows 64-bit build"

    - name: 'Publish Linux'
      shell: bash
      run: |
        dotnet publish Gami.Desktop/Gami.Desktop.csproj -r linux-x64 -c Release -o release/linux -p:PublishSingleFile=true --self-contained
        zip -r release/linux.zip release/linux

    - name: Upload Linux binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/linux.zip
        asset_name: linux.zip
        tag: ${{ github.ref }}
        overwrite: true
        body: "Linux 64-bit build"

    - name: 'Publish Mac OSX'
      shell: bash
      run: |
        dotnet publish Gami.Desktop/Gami.Desktop.csproj -r osx-x64 -c Release -o release/macos -p:PublishSingleFile=true --self-contained
        zip -r release/macos.zip release/macos

    - name: Upload Mac OSX binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/macos.zip
        asset_name: macos.zip
        tag: ${{ github.ref }}
        overwrite: true
        body: "Mac OSX 64-bit build"